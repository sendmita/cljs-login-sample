;; Analyzed by ClojureScript 1.8.51
{:name hellominion.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros {reagent reagent.core, reagent.core reagent.core}, :uses nil, :requires {reagent reagent.core, reagent.core reagent.core}, :imports nil, :defs {multiply {:protocol-inline nil, :meta {:file "/Users/home/clj-minions/hellominion/src/hellominion/core.cljc", :line 5, :column 7, :end-line 5, :end-column 15, :arglists (quote ([a b]))}, :name hellominion.core/multiply, :variadic false, :file "src/hellominion/core.cljc", :end-column 15, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, say-hello {:protocol-inline nil, :meta {:file "/Users/home/clj-minions/hellominion/src/hellominion/core.cljc", :line 8, :column 8, :end-line 8, :end-column 17, :arglists (quote ([]))}, :name hellominion.core/say-hello, :variadic false, :file "src/hellominion/core.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}